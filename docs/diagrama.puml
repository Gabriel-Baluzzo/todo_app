@startuml AppTareas

enum Prioridad {
    ALTA
    MEDIA
    BAJA
}

enum Categoria {
    TRABAJO
    PERSONAL
    RECADOS
}

enum EstadoTarea {
    PENDIENTE
    COMPLETADA
}

interface EditarTareaParam {
    titulo?:string
    descripcion?:string
    fechaVencimiento?:Date
    prioridad?:Prioridad
    progreso?:number
    tiempoDedicado?:number
}

interface EstadisticaRetorno {
    tareasCompletadas:Tarea[];
    tareasPendientes:Tarea[];
    tiempoPromedio:number;
    tasaFinalizacion:number;
}

class Tarea {
    -_contadorId:number
    -id: number
    -titulo: string
    -descripcion: string
    -fechaVencimiento: Date
    -prioridad: Prioridad
    -estado: EstadoTarea
    -progreso: number
    -categoria: Categoria
    -marcadores:Array<Marcador>
    -tiempoDedicado:number

    +editarTarea(params:EditarTareaParams):void
    +tareaComleta():void
    +agregarMarcador(e:Marcador):void 
}


class GestorTareas {
    -tareas:Array<Tarea>

    +crearTarea(c:Categoria):Tarea
    +agregarTarea(t: Tarea):void
    +eliminarTarea(t:Tarea):void
    +buscarTarea(a:BuscadorSetter, param:BuscadorParam):Tarea[]
    +ordenarTareas(a:AlgoritmoOrdenamiento):void
    +obtenerEstadisticas(e:Estadistica):EstadisticaRetorno
}

interface AlgoritmoBusqueda {
    <i>buscar(t:Array<Tarea>, param:BuscadorParam):Tarea[]
}

class BusquedaTitulo implements AlgoritmoBusqueda{
    +buscar(t:Array<Tarea>, param:BuscadorParam):Tarea[]
}

class BusquedaFecha implements AlgoritmoBusqueda{
    +buscar(t:Array<Tarea>, param:BuscadorParam):Tarea[]
}

class BuscadorSetter {
    -buscar:AlgoritmoBusqueda

    +busquedaSetter(param:BuscadorParam)
    busqueda(t:Array<Tarea>, param:BuscadorParam):Tarea[]
}

interface BuscadorParam {
    titulo?:string
    fecha?:Date
}

interface AlgoritmoOrdenamiento {
    <i>ordenar(t:Array<Tarea>):void
}

class OrdenFecha {
    +ordenar(t:Array<Tarea>):void
}

class OrdenTitulo implements AlgoritmoOrdenamiento{
    +ordenar(t:Array<Tarea>):void
}

class OrdenPrioridad implements AlgoritmoOrdenamiento{
    +ordenar(t:Array<Tarea>):void
}

interface Marcador {
    <i>getNombre():string
}

class Etiqueta {
    -nombre: string
    +getNombre():string
}

interface AlgoritmoTasaFinalizacion {
    <i>calcularTasaFinalizacion(tareas:Array<Tarea>, e:Estadistica):number
}

class TasaFinalizacion  {
    +calcularTasaFinalizacion(tareas:Array<Tarea>, e:Estadistica):number
}

interface AlgoritmoTiempoPromedio {
    <i>calcularPromedioTiempo(tareas:Array<Tarea>):number
}

class TiempoPromedio  {
    +calcularPromedioTiempo(tareas:Array<Tarea>):number
}

class Estadistica {
    -tareasCompletadas:Array<Tarea>
    -tareasPendientes:Array<Tarea>
    -tiempoPromedio:number
    -tasaFinalizacion:number
    -tiemproPromedioHelper:AlgoritmoTiempoPromedio
    -tasaFinalizacionHelper:AlgoritmoTasaFinalizacion

    +calcularEstadisticas(tareas:Array<Tarea>):EstadisticaRetorno
    +listadoTareasCompletas(tareas:Array<Tarea>):Array<Tarea>
    +listadoTareasPendientes(tareas:Array<Tarea>):Array<Tarea>
}

Tarea --> Categoria
Tarea *-- Marcador
Marcador <|.. Etiqueta
GestorTareas *.d. Tarea
GestorTareas <-u- Estadistica
EstadisticaRetorno<.. Estadistica
Estadistica*--l AlgoritmoTasaFinalizacion
TasaFinalizacion ..|>AlgoritmoTasaFinalizacion
Estadistica*--r AlgoritmoTiempoPromedio
TiempoPromedio..|>AlgoritmoTiempoPromedio
Tarea --> Prioridad
Tarea --> EstadoTarea
GestorTareas <---r AlgoritmoOrdenamiento
GestorTareas <---l BuscadorSetter
BuscadorSetter *--l AlgoritmoBusqueda
Tarea<..l EditarTareaParam
BuscadorParam -r-> AlgoritmoBusqueda
AlgoritmoOrdenamiento <|.r.OrdenFecha
@enduml
